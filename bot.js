const TelegramBot = require('node-telegram-bot-api');
const axios = require('axios');

const token = '7857168232:AAGN6xd72s5p05jMJ3tk3blKJH2LxKWrvng';

const bot = new TelegramBot(token, { polling: true });

bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;
  bot.sendMessage(chatId, `üëã –ü—Ä–∏–≤–µ—Ç, ${msg.from.first_name}!
–Ø –ø–æ–º–æ–≥—É –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Å—Ä–µ–¥—Å—Ç–≤–∞ –∏–∑–º–µ—Ä–µ–Ω–∏–π —á–µ—Ä–µ–∑ –§–ì–ò–° –ê—Ä—à–∏–Ω.

–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Å–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–∞ –æ –ø–æ–≤–µ—Ä–∫–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:
*16078-13* –∏–ª–∏ –¥—Ä—É–≥–æ–π –Ω–æ–º–µ—Ä –ø–æ–≤–µ—Ä–∫–∏.`, { parse_mode: 'Markdown' });
});

bot.on('message', async (msg) => {
  const chatId = msg.chat.id;
  const text = msg.text?.trim();

  if (!text || text.startsWith('/')) return;

  await bot.sendMessage(chatId, 'üîç –ò—â—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...');

  try {
    const response = await axios.get('https://fgis.gost.ru/fundmetrology/eapi/vri', {
      params: {
        search: text,
        rows: 1,
        start: 0
      }
    });

    console.log('–û—Ç–≤–µ—Ç API:', JSON.stringify(response.data, null, 2));

    const docs = response.data.result.items;

    if (!Array.isArray(docs) || docs.length === 0) {
      await bot.sendMessage(chatId, '‚ùå –°—Ä–µ–¥—Å—Ç–≤–æ –∏–∑–º–µ—Ä–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–æ–º–µ—Ä–∞ –ø–æ–≤–µ—Ä–∫–∏.');
      return;
    }

    const doc = docs[0];

    const name = doc.mit_notation || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
    const serial = doc.mi_number || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
    const vriNumber = doc.mit_number || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
    const verificationDate = doc.verification_date || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
    const validDate = doc.valid_date || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
    const organization = doc.org_title || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
    const status = doc.applicability ? '‚úÖ –î–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ' : '‚ùå –ù–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ';

    const message = `
${status} *–°—Ä–µ–¥—Å—Ç–≤–æ –∏–∑–º–µ—Ä–µ–Ω–∏–π –Ω–∞–π–¥–µ–Ω–æ!*

üìÑ *–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ:* ${name}
üè∑ *–ó–∞–≤–æ–¥—Å–∫–æ–π –Ω–æ–º–µ—Ä:* ${serial}
üìë *–ù–æ–º–µ—Ä —Å–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–∞:* ${vriNumber}

üìÖ *–î–∞—Ç–∞ –ø–æ–≤–µ—Ä–∫–∏:* ${verificationDate}
‚è≥ *–î–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –¥–æ:* ${validDate}

üìç *–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –ø–æ–≤–µ—Ä–∫–∏:* ${organization}

üí° *–°—Ç–∞—Ç—É—Å:* ${status === '‚úÖ –î–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ' ? '–î–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ' : '–ù–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ'}
    `;

    await bot.sendMessage(chatId, message, { parse_mode: 'Markdown' });

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:', error);
    await bot.sendMessage(chatId, '‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ –ê—Ä—à–∏–Ω—É. –í–æ–∑–º–æ–∂–Ω–æ, —Å–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –∏–ª–∏ –≤–≤–µ–¥—ë–Ω –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä.');
  }
});
